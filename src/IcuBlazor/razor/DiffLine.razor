@page "/DiffLine"

@using DiffPlex.DiffBuilder.Model

@code {
    [Parameter] public DiffPiece Model { get; set; } = null!; // required
    [Parameter] public bool Old { get; set; } = false;
    [Parameter] public bool LineNums { get; set; } = false;

    string charStyle(ChangeType c)
    {
        switch (c) {
        case ChangeType.Unchanged: return "CharUnchanged piece";
        case ChangeType.Deleted:   return "CharDeleted   piece";
        case ChangeType.Inserted:  return "CharInserted  piece";
        case ChangeType.Imaginary: return "CharImaginary piece";
        case ChangeType.Modified:  return "CharModified  piece";
        default: return "";
        }
    }

    string lineStyle(ChangeType c)
    {
        switch (c) {
        case ChangeType.Unchanged: return "LineUnchanged pieceHolder line";
        case ChangeType.Deleted:   return "LineDeleted   pieceHolder line";
        case ChangeType.Inserted:  return "LineInserted  pieceHolder line";
        case ChangeType.Imaginary: return "LineImaginary pieceHolder line";
        case ChangeType.Modified:
            return Old
                ? "LineDeleted  pieceHolder line"
                : "LineInserted pieceHolder line";
        default: return "";
        }
    }
}

@{
    var mType = Model.Type;
}

<div class="@lineStyle(mType)">
    @if (LineNums && mType != ChangeType.Imaginary) {
        <span class="lineNumber piece">@Model.Position: </span>
    }
    @if (mType == ChangeType.Modified) {
        foreach (var ch in Model.SubPieces) {
            var cType = ch.Type;
            if (cType != ChangeType.Imaginary && ch.Text.Length > 0) {
                <span class=@charStyle(cType)>@ch.Text</span>
            }
        }
    } else {
        <span class=@charStyle(mType)>@Model.Text&nbsp;</span>
    }
</div>

