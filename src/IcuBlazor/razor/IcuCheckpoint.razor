@page "/IcuCheckpoint"

@using IcuBlazor.razor.Views

@code {
    [CascadingParameter(Name = "ICU")] IcuClient ICU { get; set; } = null!; // non-null required
    [Parameter] public Checkpoint Check { get; set; } = null!; // non-null required
    [Parameter] public bool Verify { get; set; } = false;
    [Parameter] public RenderFragment? Toolbar { get; set; }

    public void Update() { StateHasChanged(); }
    public void SetToolbar(RenderFragment t) { Toolbar = t; }
}
@{
    var CP = Check;
    var si = OutcomeIcon.OutcomeStat(CP.Outcome);
    var box = "box-" + si.State;
    var info = String.IsNullOrEmpty(CP.InfoLog)
                ? null : new InfoLog(CP.InfoLog);
    var hasDetail = (CP.model != null || info != null);

    var phdr = "";
    if (ICU.Config.ViewLayout == ViewLayout.Flat) {
        var p = CP.Parent.Value as TestMethod;
        phdr = (p != null) ? $"{p.Parent.Value.Name}\\{p.Name}: " : "";
    }
    var showHeader = Str.isOk(CP.header);
}

<CascadingValue Value="@this" Name="CPview" IsFixed="true">
<div class="@box" @key=@CP.Path>
    <Folder Tree="@CP" HasDetail="@hasDetail" ShowHeader="@showHeader" StayOpen="@Verify">
        <HeaderTitle>
            <GridLayout Cols="auto 1fr auto" class="cp-toolbar">
                <OutcomeIcon Outcome="@CP.Outcome" />
                <span><span class="muted-text">@phdr</span>@CP.header</span>
                @if (CP.Open && Toolbar != null) {
                    @Toolbar
                }
            </GridLayout>
        </HeaderTitle>
        <Detail>
            @if (info != null) {
                <InfoLogView Model="@info"/>
            }
            @switch (CP.testType.Tag) {
            case TestType.Tags.TextDiff:
                var d = CP.model as DiffFileAssert;
                if (d != null) {
                    <DiffText OldText=@d.Expect NewText=@d.Result />
                }
                break;
            case TestType.Tags.FileDiff:
                <IcuDiffText Check="@CP" />
                break;
            case TestType.Tags.ImageDiff:
                <IcuDiffImage Check="@CP" />
                break;
            //case TestType.Tags.Assert:
            default:
                <ViewOf Model="@CP.model"/>
                break;
            }
        </Detail>
    </Folder>
</div>
</CascadingValue>